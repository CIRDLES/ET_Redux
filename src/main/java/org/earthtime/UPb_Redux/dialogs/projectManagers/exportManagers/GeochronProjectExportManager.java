/*
 * Copyright 2015 CIRDLES.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.earthtime.UPb_Redux.dialogs.projectManagers.exportManagers;

import java.io.IOException;
import java.nio.file.DirectoryIteratorException;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import org.earthtime.UPb_Redux.dialogs.DialogEditor;
import org.earthtime.UPb_Redux.user.ReduxPersistentState;
import org.earthtime.UPb_Redux.utilities.BrowserControl;

/**
 *
 * @author sbowring
 */
public class GeochronProjectExportManager extends DialogEditor {

    private Path projectSamplesFolderPath;
    private ReduxPersistentState reduxPersistentState;

    /**
     * Creates new form GeochronProjectExportManager
     */
    public GeochronProjectExportManager(java.awt.Frame parent, boolean modal, Path projectSamplesFolderPath, ReduxPersistentState reduxPersistentState) {
        super(parent, modal);
        this.projectSamplesFolderPath = projectSamplesFolderPath;
        this.reduxPersistentState = reduxPersistentState;

        initComponents();

        geochronUserName_text.setDocument(new UnDoAbleDocument(geochronUserName_text, true));
        geochronUserName_text.setText(reduxPersistentState.getReduxPreferences().getGeochronUserName());

        geochronPassword_passwordField.setDocument(new UnDoAbleDocument(geochronPassword_passwordField, true));
        geochronPassword_passwordField.setText(reduxPersistentState.getReduxPreferences().getGeochronPassWord());

        setSize(500, 500);

        // test
        try (DirectoryStream<Path> stream = Files.newDirectoryStream(projectSamplesFolderPath)) {
            for (Path file : stream) {
                System.out.println(file.getFileName());
            }
        } catch (IOException | DirectoryIteratorException x) {
            // IOException can never be thrown by the iteration.
            // In this snippet, it can only be thrown by newDirectoryStream.
            System.err.println(x.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exportManagerLayeredPane = new javax.swing.JLayeredPane();
        geochronPassword_passwordField = new javax.swing.JPasswordField();
        geochronUserName_text = new javax.swing.JTextField();
        credentialsValidReport_label = new javax.swing.JLabel();
        validateGeochronCredentials_button = new javax.swing.JButton();
        visitGeochron_button = new javax.swing.JButton();
        userNameGeochron_label = new javax.swing.JLabel();
        passwordGeochron_label = new javax.swing.JLabel();
        saveAndCloseAndProceedToAliquotChooser_button = new javax.swing.JButton();
        userNameGeochron_label1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exportManagerLayeredPane.setBackground(new java.awt.Color(255, 255, 255));
        exportManagerLayeredPane.setOpaque(true);
        exportManagerLayeredPane.setPreferredSize(new java.awt.Dimension(1000, 600));
        exportManagerLayeredPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        geochronPassword_passwordField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        geochronPassword_passwordField.setText("############");
        exportManagerLayeredPane.add(geochronPassword_passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));

        geochronUserName_text.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        geochronUserName_text.setText("username");
        exportManagerLayeredPane.add(geochronUserName_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 170, -1));

        credentialsValidReport_label.setBackground(new java.awt.Color(255, 255, 255));
        credentialsValidReport_label.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        credentialsValidReport_label.setForeground(new java.awt.Color(255, 51, 51));
        credentialsValidReport_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        credentialsValidReport_label.setText("credentials are VALID");
        credentialsValidReport_label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        credentialsValidReport_label.setOpaque(true);
        exportManagerLayeredPane.add(credentialsValidReport_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 170, -1));

        validateGeochronCredentials_button.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        validateGeochronCredentials_button.setForeground(new java.awt.Color(255, 51, 51));
        validateGeochronCredentials_button.setText("<html><b>Validate</b> Geochron credentials</html>");
        validateGeochronCredentials_button.setName("false"); // NOI18N
        validateGeochronCredentials_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateGeochronCredentials_buttonActionPerformed(evt);
            }
        });
        exportManagerLayeredPane.add(validateGeochronCredentials_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, -1, -1));

        visitGeochron_button.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        visitGeochron_button.setText("Visit Geochron");
        visitGeochron_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitGeochron_buttonActionPerformed(evt);
            }
        });
        exportManagerLayeredPane.add(visitGeochron_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, -1));

        userNameGeochron_label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userNameGeochron_label.setText("user name:");
        exportManagerLayeredPane.add(userNameGeochron_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        passwordGeochron_label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        passwordGeochron_label.setText("password:");
        exportManagerLayeredPane.add(passwordGeochron_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        saveAndCloseAndProceedToAliquotChooser_button.setForeground(new java.awt.Color(255, 51, 0));
        saveAndCloseAndProceedToAliquotChooser_button.setText("Proceed to Aliquot Chooser");
        saveAndCloseAndProceedToAliquotChooser_button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        saveAndCloseAndProceedToAliquotChooser_button.setPreferredSize(new java.awt.Dimension(110, 23));
        saveAndCloseAndProceedToAliquotChooser_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAndCloseAndProceedToAliquotChooser_buttonActionPerformed(evt);
            }
        });
        exportManagerLayeredPane.add(saveAndCloseAndProceedToAliquotChooser_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 250, -1));

        userNameGeochron_label1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userNameGeochron_label1.setText("user name:");
        exportManagerLayeredPane.add(userNameGeochron_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        getContentPane().add(exportManagerLayeredPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1160, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        exportManagerLayeredPane.setSize(this.getSize());
    }//GEN-LAST:event_formComponentResized

    private void validateGeochronCredentials_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateGeochronCredentials_buttonActionPerformed
        validateGeochronCredentials(true);
    }//GEN-LAST:event_validateGeochronCredentials_buttonActionPerformed

    private void visitGeochron_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitGeochron_buttonActionPerformed
        BrowserControl.displayURL("http://www.geochron.org/");
    }//GEN-LAST:event_visitGeochron_buttonActionPerformed

    private void saveAndCloseAndProceedToAliquotChooser_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAndCloseAndProceedToAliquotChooser_buttonActionPerformed

    }//GEN-LAST:event_saveAndCloseAndProceedToAliquotChooser_buttonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel credentialsValidReport_label;
    private javax.swing.JLayeredPane exportManagerLayeredPane;
    private javax.swing.JPasswordField geochronPassword_passwordField;
    private javax.swing.JTextField geochronUserName_text;
    private javax.swing.JLabel passwordGeochron_label;
    private javax.swing.JButton saveAndCloseAndProceedToAliquotChooser_button;
    private javax.swing.JLabel userNameGeochron_label;
    private javax.swing.JLabel userNameGeochron_label1;
    private javax.swing.JButton validateGeochronCredentials_button;
    private javax.swing.JButton visitGeochron_button;
    // End of variables declaration//GEN-END:variables

    /**
     * @param projectSamplesFolderPath the projectSamplesFolderPath to set
     */
    public void setProjectSamplesFolderPath(Path projectSamplesFolderPath) {
        this.projectSamplesFolderPath = projectSamplesFolderPath;
    }

    private void validateGeochronCredentials(boolean isVerbose) {
        boolean valid = reduxPersistentState.validateGeochronCredentials(//
                geochronUserName_text.getText().trim(),//
                new String(geochronPassword_passwordField.getPassword()), isVerbose);

        if (valid) {
            credentialsValidReport_label.setText("Credentials are VALID.");
        } else {
            credentialsValidReport_label.setText("Credentials are NOT valid.");
        }

        saveAndCloseAndProceedToAliquotChooser_button.setEnabled(valid);
        credentialsValidReport_label.setVisible(true);

    }

}
