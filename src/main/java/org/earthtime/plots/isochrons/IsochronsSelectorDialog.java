/*
 * IsochronsSelectorDialog.java
 *
 *
 * Copyright 2006-2017 James F. Bowring and www.Earth-Time.org
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.earthtime.plots.isochrons;

import java.util.Iterator;
import java.util.SortedSet;
import java.util.TreeSet;
import javax.swing.DefaultListModel;
import org.earthtime.beans.ET_JButton;
import org.earthtime.dialogs.DialogEditor;

/**
 *
 * @author James F. Bowring
 */
public class IsochronsSelectorDialog extends DialogEditor {

    // Fields    
    private SortedSet<IsochronModel> selectedIsochrons;

    /**
     * Creates new form IsochronsSelectorDialog
     *
     * @param parent
     * @param modal
     * @param selectedIsochrons
     */
    public IsochronsSelectorDialog(//
            java.awt.Frame parent,
            boolean modal,
            SortedSet<IsochronModel> selectedIsochrons) {
        super(parent, modal);

        this.selectedIsochrons = selectedIsochrons;
        if (this.selectedIsochrons == null) {
            this.selectedIsochrons = new TreeSet<>();
        }

        initComponents();

        initLists();

    }

    private void initLists() {
        DefaultListModel availableListModel = new DefaultListModel();
        DefaultListModel displayedListModel = new DefaultListModel();

        Iterator<IsochronModel> isochronIterator = selectedIsochrons.iterator();
        while (isochronIterator.hasNext()) {
            IsochronModel im = isochronIterator.next();
            if (im.isVisible()) {
                displayedListModel.addElement(im.presentationView());
            } else {
                availableListModel.addElement(im.presentationView());
            }
        }
        availableList.setModel(availableListModel);
        displayedList.setModel(displayedListModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonsPanel = new javax.swing.JPanel();
        apply_button = new ET_JButton();
        close_button = new ET_JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        specifyIsochron_label = new javax.swing.JLabel();
        availableListLabel = new javax.swing.JLabel();
        displayedListLabel = new javax.swing.JLabel();
        displayIsochron_button = new ET_JButton();
        hideIsochron_button = new ET_JButton();
        addIsochron_button = new ET_JButton();
        removeIsochron_button = new ET_JButton();
        dateInKaText = new javax.swing.JTextField();
        specifyDateka_label = new javax.swing.JLabel();
        specifyOrigin_label = new javax.swing.JLabel();
        specifyX_label = new javax.swing.JLabel();
        xCoordText = new javax.swing.JTextField();
        specifyY_label = new javax.swing.JLabel();
        yCoordText = new javax.swing.JTextField();
        availableScrollPane = new javax.swing.JScrollPane();
        availableList = new javax.swing.JList<>();
        displayedScrollPane = new javax.swing.JScrollPane();
        displayedList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Available Sample Date Interpretation Models");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(245, 236, 206));
        setForeground(java.awt.Color.white);
        setName(getTitle());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonsPanel.setBackground(new java.awt.Color(252, 236, 235));
        buttonsPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        buttonsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        apply_button.setForeground(new java.awt.Color(255, 51, 0));
        apply_button.setText("Apply");
        apply_button.setMargin(new java.awt.Insets(0, 1, 0, 1));
        apply_button.setPreferredSize(new java.awt.Dimension(140, 23));
        apply_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apply_buttonActionPerformed(evt);
            }
        });
        buttonsPanel.add(apply_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 2, 115, 25));

        close_button.setForeground(new java.awt.Color(255, 51, 0));
        close_button.setText("Close");
        close_button.setMargin(new java.awt.Insets(0, 1, 0, 1));
        close_button.setPreferredSize(new java.awt.Dimension(140, 23));
        close_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_buttonActionPerformed(evt);
            }
        });
        buttonsPanel.add(close_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 2, 115, 25));

        getContentPane().add(buttonsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 333, 340, 30));

        jLayeredPane1.setBackground(new java.awt.Color(255, 237, 255));
        jLayeredPane1.setOpaque(true);

        specifyIsochron_label.setText("Specify Isochrons:");
        jLayeredPane1.add(specifyIsochron_label);
        specifyIsochron_label.setBounds(10, 10, 120, 16);

        availableListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        availableListLabel.setText("Available");
        jLayeredPane1.add(availableListLabel);
        availableListLabel.setBounds(20, 40, 110, 16);

        displayedListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        displayedListLabel.setText("Displayed");
        jLayeredPane1.add(displayedListLabel);
        displayedListLabel.setBounds(180, 40, 120, 16);

        displayIsochron_button.setForeground(new java.awt.Color(255, 51, 0));
        displayIsochron_button.setText(">>");
        displayIsochron_button.setMargin(new java.awt.Insets(0, 1, 0, 1));
        displayIsochron_button.setPreferredSize(new java.awt.Dimension(140, 23));
        displayIsochron_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayIsochron_buttonActionPerformed(evt);
            }
        });
        jLayeredPane1.add(displayIsochron_button);
        displayIsochron_button.setBounds(145, 110, 30, 23);

        hideIsochron_button.setForeground(new java.awt.Color(255, 51, 0));
        hideIsochron_button.setText("<<");
        hideIsochron_button.setMargin(new java.awt.Insets(0, 1, 0, 1));
        hideIsochron_button.setPreferredSize(new java.awt.Dimension(140, 23));
        hideIsochron_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideIsochron_buttonActionPerformed(evt);
            }
        });
        jLayeredPane1.add(hideIsochron_button);
        hideIsochron_button.setBounds(145, 140, 30, 23);

        addIsochron_button.setForeground(new java.awt.Color(255, 51, 0));
        addIsochron_button.setText("+");
        addIsochron_button.setMargin(new java.awt.Insets(0, 1, 0, 1));
        addIsochron_button.setPreferredSize(new java.awt.Dimension(140, 23));
        addIsochron_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addIsochron_buttonActionPerformed(evt);
            }
        });
        jLayeredPane1.add(addIsochron_button);
        addIsochron_button.setBounds(50, 220, 30, 23);

        removeIsochron_button.setForeground(new java.awt.Color(255, 51, 0));
        removeIsochron_button.setText("-");
        removeIsochron_button.setMargin(new java.awt.Insets(0, 1, 0, 1));
        removeIsochron_button.setPreferredSize(new java.awt.Dimension(140, 23));
        removeIsochron_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeIsochron_buttonActionPerformed(evt);
            }
        });
        jLayeredPane1.add(removeIsochron_button);
        removeIsochron_button.setBounds(80, 220, 30, 23);

        dateInKaText.setText("0");
        jLayeredPane1.add(dateInKaText);
        dateInKaText.setBounds(150, 255, 50, 26);

        specifyDateka_label.setText("Enter Date in ka:");
        jLayeredPane1.add(specifyDateka_label);
        specifyDateka_label.setBounds(30, 260, 110, 16);

        specifyOrigin_label.setText("Enter Isochron origin:");
        jLayeredPane1.add(specifyOrigin_label);
        specifyOrigin_label.setBounds(30, 290, 140, 16);

        specifyX_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        specifyX_label.setText("x:");
        jLayeredPane1.add(specifyX_label);
        specifyX_label.setBounds(170, 290, 15, 16);

        xCoordText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        xCoordText.setText("0.0");
        jLayeredPane1.add(xCoordText);
        xCoordText.setBounds(190, 285, 50, 26);

        specifyY_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        specifyY_label.setText("y:");
        jLayeredPane1.add(specifyY_label);
        specifyY_label.setBounds(240, 290, 15, 16);

        yCoordText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        yCoordText.setText("0.0");
        jLayeredPane1.add(yCoordText);
        yCoordText.setBounds(260, 285, 50, 26);

        availableList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        availableScrollPane.setViewportView(availableList);

        jLayeredPane1.add(availableScrollPane);
        availableScrollPane.setBounds(20, 70, 120, 150);

        displayedList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        displayedScrollPane.setViewportView(displayedList);

        jLayeredPane1.add(displayedScrollPane);
        displayedScrollPane.setBounds(180, 70, 120, 150);

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void close_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_buttonActionPerformed
        close();
    }//GEN-LAST:event_close_buttonActionPerformed

    private void apply_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apply_buttonActionPerformed
        OK();
        close();
    }//GEN-LAST:event_apply_buttonActionPerformed

    private void displayIsochron_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayIsochron_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayIsochron_buttonActionPerformed

    private void addIsochron_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addIsochron_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addIsochron_buttonActionPerformed

    private void hideIsochron_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideIsochron_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hideIsochron_buttonActionPerformed

    private void removeIsochron_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeIsochron_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeIsochron_buttonActionPerformed

    private void OK() {

    }

    /**
     * @return the selectedIsochrons
     */
    public SortedSet<IsochronModel> getSelectedIsochrons() {
        return selectedIsochrons;
    }

    /**
     * @param selectedIsochrons the selectedIsochrons to set
     */
    public void setSelectedIsochrons(SortedSet<IsochronModel> selectedIsochrons) {
        this.selectedIsochrons = selectedIsochrons;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addIsochron_button;
    private javax.swing.JButton apply_button;
    private javax.swing.JList<String> availableList;
    private javax.swing.JLabel availableListLabel;
    private javax.swing.JScrollPane availableScrollPane;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton close_button;
    private javax.swing.JTextField dateInKaText;
    private javax.swing.JButton displayIsochron_button;
    private javax.swing.JList<String> displayedList;
    private javax.swing.JLabel displayedListLabel;
    private javax.swing.JScrollPane displayedScrollPane;
    private javax.swing.JButton hideIsochron_button;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JButton removeIsochron_button;
    private javax.swing.JLabel specifyDateka_label;
    private javax.swing.JLabel specifyIsochron_label;
    private javax.swing.JLabel specifyOrigin_label;
    private javax.swing.JLabel specifyX_label;
    private javax.swing.JLabel specifyY_label;
    private javax.swing.JTextField xCoordText;
    private javax.swing.JTextField yCoordText;
    // End of variables declaration//GEN-END:variables

}
