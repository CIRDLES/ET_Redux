/*
 * Copyright 2019 CIRDLES.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.earthtime.plots.evolution.openSystem;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import org.earthtime.beans.ET_JButton;
import org.earthtime.dialogs.DialogEditor;

/**
 *
 * @author James F. Bowring, CIRDLES.org, and Earth-Time.org
 */
public class OpenSystemModelsManager extends DialogEditor {

    private List<OpenSystemIsochronTableModel> openModels;

    /**
     * Creates new form OpenSystemModelsManager
     */
    private OpenSystemModelsManager() {
        this(null, true, new ArrayList<OpenSystemIsochronTableModel>());
    }

    public OpenSystemModelsManager(java.awt.Frame parent,
            boolean modal, List<OpenSystemIsochronTableModel> openModels) throws HeadlessException {
        super(parent, modal);
        initComponents();

        this.openModels = openModels;
        if (this.openModels.isEmpty()) {
            this.openModels.add(new OpenSystemIsochronTableModel());
        }

        initModels();
    }

    private void initModels() {
        setSize(325, openModels.size() * 265 + 50);

        JPanel modelsPanel = new JPanel(null);
        modelsPanel.setSize(300, openModels.size() * 250);
        modelsPanel.setBackground(new Color(249, 237, 189));
        modelsPanel.setPreferredSize(new Dimension(300, openModels.size() * 265 + 25));
        
        int count = 0;
        for (OpenSystemIsochronTableModel osm : openModels) {
            JPanel openPanel = new OpenSystemModelDataView(osm);
            openPanel.setBounds(10, count * 245 + 10, 300, 235);
            modelsPanel.add(openPanel);
            count++;
        }
        
        JButton okButton =  new ET_JButton("OK");
        okButton.setBounds(15, count * 245 + 10, 290, 25);
        okButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
        modelsPanel.add(okButton);

        JScrollPane modelsScroll = new JScrollPane(modelsPanel);
        modelsScroll.setSize(300, openModels.size() * 265);
        
        setContentPane(modelsScroll);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpenSystemModelsManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpenSystemModelsManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpenSystemModelsManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpenSystemModelsManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new OpenSystemModelsManager().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
